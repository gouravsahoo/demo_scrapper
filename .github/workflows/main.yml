# Hourly scraping
name: web scraper

# Controls when the action will run.
on:
  push:
    branches: main
    # - cron:  '0 13 * * *'

    # paths-ignore:
    #   - 'data/*'

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  
jobs: 
  autoscrape:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Load repo and install python
    steps:
    - uses: actions/checkout@main
    

    # Set-up python
    - name: Install packages
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    # Run py script
    - name: Scrape
      env: 
        SOME_SECRET: ${{ secrets.SOME_SECRET }}
      run: python main.py

    - uses: mikeal/publish-to-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
 # Add new files in data folder, commit along with other modified files, push
    # - name: Commit changes
    #   uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     commit_message: Update data/test.csv
    #   id: auto-commit-action
   
    # - name: Commit and push if it changed
    #   run: |-
    #     git config user.name "Automated"
    #     git config user.email "actions@users.noreply.github.com"
    #     git add -A
    #     timestamp=$(date -u)
    #     git commit -m "Latest data: ${timestamp}" || exit 0
    #     git push
   
    # - name: Commit files
    #   run: |
    #     git config --local user.name "Github Action"
    #     git config --local user.email "actions@github.com"
    #     git add data/*
    #     git diff-index --quiet HEAD || (git commit -a -m "updated logs" --allow-empty)


    # - name: GIT Commit Build Artifacts (data)
    #   # Only run on main branch push (e.g. pull request merge).
    #   if: github.event_name == 'push'
    #   run: |
    #     git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
    #     git config --global user.email "username@users.noreply.github.com"
    #     git add data
    #     git push
      
    # - name: push changes
    #   uses: ad-m/github-push-action@v0.6.0
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: main 
      # env:
      #   REPO_KEY: ${{secrets.GITHUB_TOKEN}}
      #   username: github-actions

